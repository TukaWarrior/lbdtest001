name: Cross-Platform Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'main'

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [17, 21]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4
      with:
        ref: ${{ github.event.inputs.branch }}

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build with Maven
      working-directory: ./anygui
      run: mvn -B package --file pom.xml

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: Package-${{ matrix.os }}-Java${{ matrix.java }}
        path: anygui/target/*.jar

  test:
    needs: build
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        java: [17, 21]
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK ${{ matrix.java }}
      uses: actions/setup-java@v4
      with:
        java-version: ${{ matrix.java }}
        distribution: 'temurin'
        cache: maven

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Run tests
      working-directory: ./anygui
      run: mvn test

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: Test-Results-${{ matrix.os }}-Java${{ matrix.java }}
        path: anygui/target/surefire-reports

  svelte-build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Use Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    - name: Cache Node.js modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.OS }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.OS }}-node-

    - name: Install dependencies
      working-directory: ./svelte-frontend  # Adjust this path as needed
      run: npm ci

    - name: Build Svelte app
      working-directory: ./svelte-frontend  # Adjust this path as needed
      run: npm run build

    - name: Upload Svelte build
      uses: actions/upload-artifact@v3
      with:
        name: svelte-build
        path: svelte-frontend/public  # Adjust this path as needed

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v4
    - name: Update dependency graph
      uses: advanced-security/maven-dependency-submission-action@v3
      with:
        directory: ./anygui
